/*******************************************************************************
* FILE NAME: FlatFile.cpp                                                      *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Class implementation of the class:                                         *
*     FlatFile- Performs operations on ASCII flat files                        *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _INOTIFEV_
#include <inotifev.hpp>
#endif

#ifndef _IOBSERVR_
#include <iobservr.hpp>
#endif

#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

#ifndef _FLATFILE_
#include "FlatFile.hpp"
#endif

#ifndef _IVBDEFS_
#include <ivbdefs.h>
#endif

#ifndef _ITRACE_
#include <itrace.hpp>
#endif


#pragma export (FlatFile::readyId)
const INotificationId FlatFile::readyId = "FlatFile::readyId";

//------------------------------------------------------------------------------
// FlatFile :: FlatFile
//------------------------------------------------------------------------------
#pragma export (FlatFile::FlatFile())
FlatFile::FlatFile()
{

   aFileIsOpen=false; iFileName="";
}     //end constructor


//------------------------------------------------------------------------------
// FlatFile :: ~FlatFile
//------------------------------------------------------------------------------
#pragma export (FlatFile::~FlatFile())
FlatFile::~FlatFile()
{
   if(aFileIsOpen) close();

}

//------------------------------------------------------------------------------
// FlatFile :: initializePart
//------------------------------------------------------------------------------
#pragma export (FlatFile::initializePart())
FlatFile & FlatFile::initializePart()
{
   makeConnections();
   notifyObservers(INotificationEvent(readyId, *this));
   return *this;
}


//------------------------------------------------------------------------------
// FlatFile :: makeConnections
//------------------------------------------------------------------------------
#pragma export (FlatFile::makeConnections())
Boolean FlatFile::makeConnections()
{
   this->enableNotification();

   return true;
}


#include "FlatFile.cpv"
