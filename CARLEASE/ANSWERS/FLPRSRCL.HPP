/*******************************************************************************
* FILE NAME: FlPrsrCl.hpp                                                      *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Declaration of the class:                                                  *
*     FileParserCalc- Composite nonvisual part for lease application           *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _FILEPARSERCALC_
#define _FILEPARSERCALC_  

class FileParserCalc;

#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

#ifndef _IOBSERVR_
#include <iobservr.hpp>
#endif

#ifndef _FLATFILE_
#include "FlatFile.hpp"
#endif

#ifndef _LEASEFILEPARSER_
#include "parser.hpp"
#endif

#ifndef _LEASECALC_
#include "LaseCalc.hpp"
#endif

#ifndef _IDATE_
#include <idate.hpp>
#endif

#ifndef _IVBVCLS_
#include <ivbvcls.h>
#endif

class IDate;
class FileParserCalcConn0;
class FileParserCalcConn1;
class FileParserCalcConn5;
class FileParserCalcConn6;
class FileParserCalcConn7;
class FileParserCalcConn11;
class FileParserCalcConn3;
class FileParserCalcConn4;
class FileParserCalcConn10;
class FileParserCalcConn8;
class FileParserCalcConn2;
#include "FlPrsrCl.h"


/*----------------------------------------------------------------------------*/
/* Align classes on four byte boundary.                                       */
/*----------------------------------------------------------------------------*/
#pragma pack(4)

//*****************************************************************************
// Class definition for FileParserCalc
//*****************************************************************************
class FileParserCalc : public IStandardNotifier, public IObserver {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   FileParserCalc();

   virtual  ~FileParserCalc();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   virtual FileParserCalc & initializePart();
   LeaseFileParser *  getaParser() const { return iaParser; };
   LeaseCalc *  getaLeaseCalc() const { return iaLeaseCalc; };
   FlatFile *  getaFile() const { return iaFile; };
   IDate *  gettoday() const { return itoday; };

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId readyId;
   static const INotificationId carModel;
   static const INotificationId customerName;
   static const INotificationId extraCost;
   static const INotificationId freeDistancePerYear;
   static const INotificationId leaseFileParser;
   static const INotificationId freeDistanceToDate;
   static const INotificationId odometerReading;
   static const INotificationId difference;
   static const INotificationId differenceColor;
   static const INotificationId todayAsString;

protected:
   //---------------------------------------------------------------------------
   // protected member functions
   //---------------------------------------------------------------------------
   Boolean makeConnections();
   virtual IObserver & dispatchNotificationEvent(const INotificationEvent & anEvent);

private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   FlatFile * iaFile;
   LeaseFileParser * iaParser;
   LeaseCalc * iaLeaseCalc;
   IDate * itoday;
   IVBVariableClass<IDate> * ileaseStartDateofaParser;
   FileParserCalcConn0 * conn0;
   FileParserCalcConn1 * conn1;
   FileParserCalcConn5 * conn5;
   FileParserCalcConn6 * conn6;
   FileParserCalcConn7 * conn7;
   FileParserCalcConn11 * conn11;
   FileParserCalcConn3 * conn3;
   FileParserCalcConn4 * conn4;
   FileParserCalcConn10 * conn10;
   FileParserCalcConn8 * conn8;
   FileParserCalcConn2 * conn2;


#include "FlPrsrCl.hpv"
};   //FileParserCalc


/*----------------------------------------------------------------------------*/
/* Resume compiler default packing.                                           */
/*----------------------------------------------------------------------------*/
#pragma pack()

#endif
