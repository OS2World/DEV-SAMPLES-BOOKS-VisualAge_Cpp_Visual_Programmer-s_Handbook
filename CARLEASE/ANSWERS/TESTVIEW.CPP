/*******************************************************************************
* FILE NAME: TestView.cpp                                                      *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Class implementation of the class:                                         *
*     TestView- Test frame window for CustomerCanvas                           *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _IFRAME_
#include <iframe.hpp>
#endif

#ifndef _CUSTOMERCANVAS_
#include "CstmrCnv.hpp"
#endif

#ifndef _INOTIFEV_
#include <inotifev.hpp>
#endif

#ifndef _IOBSERVR_
#include <iobservr.hpp>
#endif

#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

#ifndef _TESTVIEW_
#include "TestView.hpp"
#endif

#ifndef _IVBDEFS_
#include <ivbdefs.h>
#endif

#ifndef _ITRACE_
#include <itrace.hpp>
#endif


#pragma export (TestView::readyId)
const INotificationId TestView::readyId = "TestView::readyId";

//------------------------------------------------------------------------------
// TestView :: defaultFramingSpec
//------------------------------------------------------------------------------
#pragma export (TestView::defaultFramingSpec())
const IRectangle TestView::defaultFramingSpec()
{
   return(IRectangle(IPoint(36, IWindow::desktopWindow()->size().height() - 20 - 421),ISize(423, 421)));
}


//------------------------------------------------------------------------------
// TestView :: defaultTitle
//------------------------------------------------------------------------------
#pragma export (TestView::defaultTitle())
IString TestView::defaultTitle()
{
   return("Test customer canvas");
}


//------------------------------------------------------------------------------
// TestView :: TestView
//------------------------------------------------------------------------------
#pragma export (TestView::TestView(unsigned long, IWindow*, IWindow*, const IRectangle&, const IFrameWindow::Style&, const char*))
TestView::TestView(
      unsigned long id, 
      IWindow* parent, 
      IWindow* owner, 
      const IRectangle& rect, 
      const IFrameWindow::Style& style, 
      const char* title)
   : IFrameWindow(id, parent, owner, rect, style, title)
{
   iCustomerCanvas1 = new CustomerCanvas(
      IC_FRAME_CLIENT_ID, 
      this, 
      this, 
      IRectangle());

   this->setFocus();
   this->setClient(iCustomerCanvas1);
}     //end constructor


//------------------------------------------------------------------------------
// TestView :: ~TestView
//------------------------------------------------------------------------------
#pragma export (TestView::~TestView())
TestView::~TestView()
{

   delete iCustomerCanvas1;
}

//------------------------------------------------------------------------------
// TestView :: initializePart
//------------------------------------------------------------------------------
#pragma export (TestView::initializePart())
TestView & TestView::initializePart()
{
   iCustomerCanvas1->initializePart();
   makeConnections();
   notifyObservers(INotificationEvent(readyId, *this));
   return *this;
}


//------------------------------------------------------------------------------
// TestView :: makeConnections
//------------------------------------------------------------------------------
#pragma export (TestView::makeConnections())
Boolean TestView::makeConnections()
{
   this->enableNotification();
   iCustomerCanvas1->enableNotification();

   unsigned long id = this->id();
   return true;
}



